---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: NAME_SPACE
  name: NAME_SPACE
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: besu-writer
  namespace: NAME_SPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: besu-node-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: besu-writer
  namespace: NAME_SPACE

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: marketplace-sa
  namespace: kube-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::Account_ID:role/AmazonLNMeterRole

---
# Source: besu-node/templates/node-storage.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
  namespace: NAME_SPACE
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"  
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer  
reclaimPolicy: Delete
allowVolumeExpansion: true

---
# Source: besu-node/templates/node-storage.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: besu-node-writer-pvc
  namespace: NAME_SPACE
spec:
  storageClassName:  ebs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: STORAGE_SPACEGi   #375Gi
---
# Source: besu-node/templates/node-storage.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name:  besu-node-writer-ethstats-pvc 
  namespace: NAME_SPACE
spec:
  storageClassName:  ebs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Source: besu-node/templates/besu-config-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: besu-node-writer-besu-config
  labels:
    app: besu-node
    chart: besu-node-0.1.0
    release: writer
    heritage: Helm
    namespace: NAME_SPACE
    app.kubernetes.io/name: besu-node
    app.kubernetes.io/instance: writer
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: besu-node-0.1.0
  namespace: NAME_SPACE
data:
  config.toml: |-
    # Every possible CLI should be in this file.
    #
    # Please use a plausible value, besu has to at least be able to parse it.
    # If it is a multi-valued CLI make it a TOML array.
    # If it is a number or boolean make it a number or boolean
    # All other config options are strings, and must be quoted.

    # Node Information
    data-path="/data/besu"
    genesis-file="/etc/genesis/genesis.json"
    logging="INFO"
    node-private-key-file="/keys/nodekey"
    min-gas-price=0
    
    # Transaction Pool
    tx-pool-retention-hours=999
    tx-pool-max-size=1024

    # P2P network
    p2p-enabled=true
    discovery-enabled=true
    p2p-host="PUBLIC_IP"
    p2p-port=60606
    max-peers=25
    host-whitelist=["*"]
    

    # JSON-RPC
    rpc-http-enabled=true
    rpc-http-host="0.0.0.0"
    rpc-http-port=4545
    rpc-http-api=["ETH","NET","IBFT","WEB3","EEA","PRIV"]
    rpc-http-cors-origins=["all"]
    rpc-http-authentication-enabled=false
    revert-reason-enabled=true
    
    bootnodes=["enode://2ef018fceeac5def4d0c1233235e23351eb0881f4f42ac2a6aec8250cd21f302c28b9153799624edc325fa86de09ecf1c81c52e413d6a1efdef3e289021dc719@34.74.49.181:60606","enode://6c1b747dd096769f4723c7f65fc7e368daa1acaae74d286b4c47416900d22d708022019114c15a31975343e334d3419e1ed847538e777ab8d592fb2e3ddca893@35.196.67.163:60606"]    

    # GRAPHQL-RPC
    graphql-http-enabled=true
    graphql-http-host="0.0.0.0"
    graphql-http-port=4547
    graphql-http-cors-origins=["all"]
    

    # WebSockets API
    rpc-ws-enabled=true
    rpc-ws-host="0.0.0.0"
    rpc-ws-port=4546
    rpc-ws-api=["ETH","NET","IBFT","WEB3","EEA","PRIV"]
    rpc-ws-authentication-enabled=false
    

    # Permissioning
    permissions-nodes-contract-enabled=true
    permissions-nodes-contract-address="0x0000000000000000000000000000000000009999"
    permissions-accounts-contract-enabled=true
    permissions-accounts-contract-address="0x0000000000000000000000000000000000008888"
     # Permissioning end

    

    # Metrics Push
    metrics-push-enabled=true
    metrics-push-host="34.148.88.107"
    metrics-push-port=9091
    metrics-push-interval=5
    metrics-push-prometheus-job="NODE_NAME"
     ##end metrics Push
    network-id="648540"
---
# Source: besu-node/templates/besu-genesis.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: besu-node-writer-besu-genesis
  labels:
    app: besu-node
    chart: besu-node-0.1.0
    release: writer
    heritage: Helm
    namespace: NAME_SPACE
    app.kubernetes.io/name: besu-node
    app.kubernetes.io/instance: writer
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: besu-node-0.1.0
  namespace: NAME_SPACE
data:
  genesis.json: |-
    {
      "config": {
        "chainId": 648540,
        "berlinBlock": 0,
        "contractSizeLimit": 8000000,
        "ibft2": {
          "blockperiodseconds": 2,
          "epochlength": 150000,
          "requesttimeoutseconds": 4
        }
      },
      "nonce": "0x0",
      "timestamp": "0x58ee40ba",
      "extraData": "0xf83ea00000000000000000000000000000000000000000000000000000000000000000d594b29d085bf73734db0211617d9e6f78573ec57102808400000000c0",
      "gasLimit": "0x14DC9380",
      "difficulty": "0x1",
      "mixHash": "0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365",
      "coinbase": "0x0000000000000000000000000000000000000000",
      "alloc": {
        "0x6902111b45afb5bb4ea80523c0f1bb022dccea2d": {
          "balance": "1000000000000000000000000000"
        },
        "0x1a2f491ee3aead6f479646019bbdda4f194c38dc": {
          "balance": "1000000000000000000000000000"
        },
        "0x0000000000000000000000000000000000008888": {
          "comment": "Account Ingress smart contract",
          "balance": "0",
          "code": "608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638aa10435116100835780638aa10435146101f9578063936421d514610217578063a43e04d814610348578063e001f8411461038e578063fe9fbb80146103f4576100bb565b80630d2020dd146100c057806310d9042e1461012e578063116013061461018d5780631e7c27cb146101ab5780634dc3fefc146101c9575b600080fd5b6100ec600480360360208110156100d657600080fd5b8101908080359060200190929190505050610450565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610136610508565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561017957808201518184015260208101905061015e565b505050509050019250505060405180910390f35b610195610560565b6040518082815260200191505060405180910390f35b6101b3610566565b6040518082815260200191505060405180910390f35b6101f7600480360360208110156101df57600080fd5b8101908080351515906020019092919050505061056c565b005b610201610665565b6040518082815260200191505060405180910390f35b61032e600480360360c081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156102a857600080fd5b8201836020820111156102ba57600080fd5b803590602001918460018302840111640100000000831117156102dc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061066f565b604051808215151515815260200191505060405180910390f35b6103746004803603602081101561035e57600080fd5b8101908080359060200190929190505050610889565b604051808215151515815260200191505060405180910390f35b6103da600480360360408110156103a457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6e565b604051808215151515815260200191505060405180910390f35b6104366004803603602081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1b565b604051808215151515815260200191505060405180910390f35b60008060010282116104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f6e7472616374206e616d65206d757374206e6f7420626520656d7074792e81525060200191505060405180910390fd5b6003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600280548060200260200160405190810160405280929190818152602001828054801561055657602002820191906000526020600020905b815481526020019060010190808311610542575b5050505050905090565b60005481565b60015481565b3373ffffffffffffffffffffffffffffffffffffffff16600360008054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610627576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806111106033913960400191505060405180910390fd5b7f9a90898411a81dd648299737f986c95672bedd792b2c45a5c158d8365d54575f81604051808215151515815260200191505060405180910390a150565b6000600454905090565b60008073ffffffffffffffffffffffffffffffffffffffff16610693600054610450565b73ffffffffffffffffffffffffffffffffffffffff1614156106b8576001905061087f565b600360008054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663936421d58888888888886040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107f25780820151818401526020810190506107d7565b50505050905090810190601f16801561081f5780820380516001836020036101000a031916815260200191505b5097505050505050505060206040518083038186803b15801561084157600080fd5b505afa158015610855573d6000803e3d6000fd5b505050506040513d602081101561086b57600080fd5b810190808051906020019092919050505090505b9695505050505050565b6000806001028211610903576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f6e7472616374206e616d65206d757374206e6f7420626520656d7074792e81525060200191505060405180910390fd5b600060028054905011610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604781526020018061116e6047913960600191505060405180910390fd5b61096a33610f1b565b6109bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611143602b913960400191505060405180910390fd5b60008090505b600280549050811015610b635782600282815481106109e057fe5b90600052602060002001541415610b56576003600060028381548110610a0257fe5b90600052602060002001548152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050600260016002805490500381548110610a8157fe5b906000526020600020015460028281548110610a9957fe5b9060005260206000200181905550600260016002805490500381548110610abc57fe5b90600052602060002001600090556002805480919060019003610adf9190611078565b507fe3d908a1f6d2467f8e7c8198f30125843211345eedb763beb4cdfb7fe728a5af600084604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001915050610b69565b80806001019150506109c5565b50600090505b919050565b6000806001028311610be8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f6e7472616374206e616d65206d757374206e6f7420626520656d7074792e81525060200191505060405180910390fd5b610bf133610f1b565b610c46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611143602b913960400191505060405180910390fd5b610c4e6110a4565b600360008581526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610dc75760405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525090506002849080600181540180825580915050906001820390600052602060002001600090919290919091505550610e00565b82816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b806003600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fe3d908a1f6d2467f8e7c8198f30125843211345eedb763beb4cdfb7fe728a5af8385604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff16610f3f600154610450565b73ffffffffffffffffffffffffffffffffffffffff161415610f645760019050611073565b60036000600154815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561103557600080fd5b505afa158015611049573d6000803e3d6000fd5b505050506040513d602081101561105f57600080fd5b810190808051906020019092919050505090505b919050565b81548183558181111561109f5781836000526020600020918201910161109e91906110ea565b5b505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61110c91905b808211156111085760008160009055506001016110f0565b5090565b9056fe4f6e6c792052756c657320636f6e74726163742063616e20747269676765722052756c6573206368616e6765206576656e74734e6f7420617574686f72697a656420746f2075706461746520636f6e74726163742072656769737472792e4d7573742068617665206174206c65617374206f6e65207265676973746572656420636f6e747261637420746f20657865637574652064656c657465206f7065726174696f6e2ea165627a7a72305820084ef97932e13971f11fe752caa186aa7e7bb7cefe2b2382b528200d1213fcbf0029",
          "storage": {
            "0x0000000000000000000000000000000000000000000000000000000000000000": "0x72756c6573000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000001": "0x61646d696e697374726174696f6e000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000004": "0x0f4240"
          }
        },
        "0x0000000000000000000000000000000000009999": {
          "comment": "Node Ingress smart contract",
          "balance": "0",
          "code": "60806040526004361061009e576000357c0100000000000000000000000000000000000000000000000000000000900480630d2020dd146100a357806310d9042e1461011e578063116013061461018a5780631e7c27cb146101b55780633620b1df146101e05780634dc3fefc146102a45780638aa10435146102e1578063a43e04d81461030c578063e001f8411461035f578063fe9fbb80146103d2575b600080fd5b3480156100af57600080fd5b506100dc600480360360208110156100c657600080fd5b810190808035906020019092919050505061043b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012a57600080fd5b506101336104f5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561017657808201518184015260208101905061015b565b505050509050019250505060405180910390f35b34801561019657600080fd5b5061019f61054d565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b506101ca610553565b6040518082815260200191505060405180910390f35b3480156101ec57600080fd5b5061028e600480360361010081101561020457600080fd5b81019080803590602001909291908035906020019092919080356fffffffffffffffffffffffffffffffff19169060200190929190803561ffff169060200190929190803590602001909291908035906020019092919080356fffffffffffffffffffffffffffffffff19169060200190929190803561ffff169060200190929190505050610559565b6040518082815260200191505060405180910390f35b3480156102b057600080fd5b506102df600480360360208110156102c757600080fd5b81019080803515159060200190929190505050610746565b005b3480156102ed57600080fd5b506102f6610884565b6040518082815260200191505060405180910390f35b34801561031857600080fd5b506103456004803603602081101561032f57600080fd5b810190808035906020019092919050505061088e565b604051808215151515815260200191505060405180910390f35b34801561036b57600080fd5b506103b86004803603604081101561038257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c2f565b604051808215151515815260200191505060405180910390f35b3480156103de57600080fd5b50610421600480360360208110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611023565b604051808215151515815260200191505060405180910390f35b600080600102821115156104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f6e7472616374206e616d65206d757374206e6f7420626520656d7074792e81525060200191505060405180910390fd5b6003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600280548060200260200160405190810160405280929190818152602001828054801561054357602002820191906000526020600020905b81548152602001906001019080831161052f575b5050505050905090565b60005481565b60015481565b60008073ffffffffffffffffffffffffffffffffffffffff1661057d60005461043b565b73ffffffffffffffffffffffffffffffffffffffff1614156105c4577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600102905061073a565b600360008054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633620b1df8a8a8a8a8a8a8a8a6040518963ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180898152602001888152602001876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020018661ffff1661ffff168152602001858152602001848152602001836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020018261ffff1661ffff1681526020019850505050505050505060206040518083038186803b1580156106fc57600080fd5b505afa158015610710573d6000803e3d6000fd5b505050506040513d602081101561072657600080fd5b810190808051906020019092919050505090505b98975050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360008054815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610846576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001807f4f6e6c792052756c657320636f6e74726163742063616e20747269676765722081526020017f52756c6573206368616e6765206576656e74730000000000000000000000000081525060400191505060405180910390fd5b7f66120f934b66d52127e448f8e94c2460ea62821335e0dd18e89ed38a4a09b41381604051808215151515815260200191505060405180910390a150565b6000600454905090565b6000806001028211151561090a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f6e7472616374206e616d65206d757374206e6f7420626520656d7074792e81525060200191505060405180910390fd5b60006002805490501115156109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260478152602001807f4d7573742068617665206174206c65617374206f6e652072656769737465726581526020017f6420636f6e747261637420746f20657865637574652064656c657465206f706581526020017f726174696f6e2e0000000000000000000000000000000000000000000000000081525060600191505060405180910390fd5b6109dc33611023565b1515610a76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f4e6f7420617574686f72697a656420746f2075706461746520636f6e7472616381526020017f742072656769737472792e00000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008090505b600280549050811015610c245782600282815481101515610a9957fe5b90600052602060002001541415610c175760036000600283815481101515610abd57fe5b90600052602060002001548152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506002600160028054905003815481101515610b3e57fe5b9060005260206000200154600282815481101515610b5857fe5b90600052602060002001819055506002600160028054905003815481101515610b7d57fe5b90600052602060002001600090556002805480919060019003610ba09190611180565b507fe3d908a1f6d2467f8e7c8198f30125843211345eedb763beb4cdfb7fe728a5af600084604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001915050610c2a565b8080600101915050610a7c565b50600090505b919050565b60008060010283111515610cab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f436f6e7472616374206e616d65206d757374206e6f7420626520656d7074792e81525060200191505060405180910390fd5b610cb433611023565b1515610d4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f4e6f7420617574686f72697a656420746f2075706461746520636f6e7472616381526020017f742072656769737472792e00000000000000000000000000000000000000000081525060400191505060405180910390fd5b610d566111ac565b600360008581526020019081526020016000206040805190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610ecf5760408051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525090506002849080600181540180825580915050906001820390600052602060002001600090919290919091505550610f08565b82816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b806003600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fe3d908a1f6d2467f8e7c8198f30125843211345eedb763beb4cdfb7fe728a5af8385604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1600191505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff1661104760015461043b565b73ffffffffffffffffffffffffffffffffffffffff16141561106c576001905061117b565b60036000600154815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9fbb80836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561113d57600080fd5b505afa158015611151573d6000803e3d6000fd5b505050506040513d602081101561116757600080fd5b810190808051906020019092919050505090505b919050565b8154818355818111156111a7578183600052602060002091820191016111a691906111f2565b5b505050565b6040805190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61121491905b808211156112105760008160009055506001016111f8565b5090565b9056fea165627a7a72305820983bfe3942b9e8017923c6c8ab25cd06562512a2ca87192d3dca6d6bfb17de9d0029",
          "storage": {
            "0x0000000000000000000000000000000000000000000000000000000000000000": "0x72756c6573000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000001": "0x61646d696e697374726174696f6e000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000004": "0x0f4240"
          }
        }
      }
    }
---
# Source: besu-node/templates/node-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: besu-node-writer-svc
  labels:
    app: besu-node-writer-svc
    chart: besu-node-0.1.0
    release: writer
    heritage: Helm
    namespace: NAME_SPACE
    app.kubernetes.io/name: besu-node-writer-svc
    helm.sh/chart: besu-node-0.1.0
    app.kubernetes.io/instance: writer
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: writer
  namespace: NAME_SPACE
spec:
  type: LoadBalancer
  externalIPs:
    - "PUBLIC_IP"
  selector:
    app: besu-node-writer
    release: writer
    component: writer
    app.kubernetes.io/name: besu-node-writer
    app.kubernetes.io/instance: writer
  ports:
    - name: json-rpc
      port: 4545
      targetPort: json-rpc
      protocol: TCP
    - name: ws
      port: 4546
      targetPort: ws
      protocol: TCP
    - name: graphql
      port: 4547
      targetPort: graphql
      protocol: TCP
    - name: rlpx
      port: 60606
      targetPort: rlpx
      protocol: TCP
    - name: nginx
      port: 80
      targetPort: nginx
      protocol: TCP
  #loadBalancerIP: PUBLIC_IP
---
# Source: besu-node/templates/node-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: besu-node-writer
  labels:
    app: besu-node-writer
    chart: besu-node-0.1.0
    release: writer
    heritage: Helm
    namespace: NAME_SPACE
    component: writer
    app.kubernetes.io/name: besu-node-writer
    helm.sh/chart: besu-node-0.1.0
    app.kubernetes.io/instance: writer
    app.kubernetes.io/managed-by: Helm
  namespace: NAME_SPACE
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: besu-node-writer
      release: writer
      component: writer
      app.kubernetes.io/name: besu-node-writer
      app.kubernetes.io/instance: writer
  serviceName: besu-node-writer
  template:
    metadata:
      labels:
        app: besu-node-writer
        release: writer
        component: writer
        app.kubernetes.io/name: besu-node-writer
        app.kubernetes.io/instance: writer
        app.kubernetes.io/component: writer
    spec: 
      containers: 
        - name: writer-relay-signer       
          image: lacnetnetworks/relay-signer-lacchain:1.0.2
          imagePullPolicy: IfNotPresent
          env:
          - name: HOST_BESU
            value: localhost
          - name: CONTRACT_ADDRESS
            value:  0xa4B5eE2906090ce2cDbf5dfff944db26f397037D  
          volumeMounts:
            - name: data
              mountPath: /opt/secret
          ports:
            - containerPort: 9001
              name: relay-signer
              protocol: TCP           
        - name: writer-nginx
          image:  lacnetnetworks/writer-nginx-lacchain:1.0.0
          imagePullPolicy: IfNotPresent
          env:
          - name: HOST_RELAY_SIGNER
            value: localhost
          - name: HOST_BESU
            value: "127.0.0.1"
          ports:
            - containerPort: 80
              name: nginx
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false 
        - name: writer-besu
          image: lacnetnetworks/lacchain-besu:23.4.1
          imagePullPolicy: IfNotPresent
          env:
            - name: BESU_LOGGING
              value: INFO
            - name: BESU_P2P_HOST
              value: "PUBLIC_IP"
            - name: BESU_P2P_PORT
              value: "60606"
            - name: BESU_RPC_HTTP_PORT
              value: "4545"
            - name: BESU_RPC_WS_PORT
              value: "4546"
            - name: BESU_GRAPHQL_HTTP_PORT
              value: "4547"          
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name  
          volumeMounts:
            - name: genesis
              mountPath: /etc/genesis
              readOnly: true
            - name: besu-config
              mountPath: /etc/besu
              readOnly: true
            - name: data
              mountPath: /data/besu
          ports:
            - name: json-rpc
              containerPort: 4545
              protocol: TCP
            - name: ws
              containerPort: 4546
              protocol: TCP
            - name: graphql
              containerPort: 4547
              protocol: TCP
            - name: rlpx
              containerPort: 60606
              protocol: TCP
            - name: discovery
              containerPort: 60606
              protocol: UDP
          command:
            - /bin/sh
            - -c
          args:
            - |
              exec
              /opt/besu/bin/besu --genesis-file=/etc/genesis/genesis.json --data-path=/data/besu public-key  export-address --to=/data/besu/nodeAddress ; 
              sleep 3;
              /opt/besu/bin/besu  --config-file=/etc/besu/config.toml  --node-private-key-file=/data/besu/key 
      securityContext:
        fsGroup: 2000
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: besu-node-writer-pvc
      - name: genesis
        configMap:
          name: besu-node-writer-besu-genesis
      - name: besu-config
        configMap:
          name: besu-node-writer-besu-config
---
# Source: besu-node/templates/node-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  besu-node-writer-ethstats
  labels:
    app:  besu-node-writer-ethstats
  namespace: NAME_SPACE
spec:
  replicas: 1
  selector:
    matchLabels:
      app: besu-node-writer-ethstats
  serviceName: besu-node-writer-ethstats
  template:
    metadata:
      labels:
        app: besu-node-writer-ethstats
    spec:
      containers:
        - name: besu-node-writer-ethstats
          image: alethio/ethstats-cli
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: ethstats-data
              mountPath: /root/.config/configstore/
          command:
            - /bin/sh
            - -c
          args:
            - |
             exec
             ./bin/ethstats-cli.js -vd --register --account-email EMAIL_ID --node-name NODE_NAME --server-url  http://34.138.63.51:3000 --client-url ws://besu-node-writer-svc:4546   
          ports:
            - containerPort: 9001
              name: ethstats
              protocol: TCP
      securityContext:
        fsGroup: 2000
      volumes:
        - name: ethstats-data
          persistentVolumeClaim:
            claimName: besu-node-writer-ethstats-pvc
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  aws-ln-meter
  labels:
    app:  aws-ln-meter
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: aws-ln-meter
  template:
    metadata:
      labels:
        app: aws-ln-meter
    spec:
      serviceAccountName: marketplace-sa
      containers:
        - name: aws-ln-meter
          image: 709825985650.dkr.ecr.us-east-1.amazonaws.com/launch-nodes/lacchainmetering:v1
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
          ports:
            - containerPort: 6010
              name: meter
              protocol: TCP
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
#     service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
#     service.beta.kubernetes.io/aws-load-balancer-type: nlb
#   labels:
#     app.kubernetes.io/component: controller
#     app.kubernetes.io/instance: ingress-nginx
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/part-of: ingress-nginx
#     app.kubernetes.io/version: 1.8.2
#   name: ingress-nginx-controller
#   namespace: ingress-nginx
# spec:
#   externalTrafficPolicy: Local
#   ipFamilies:
#   - IPv4
#   ipFamilyPolicy: SingleStack
#   ports:
#   - appProtocol: http
#     name: http
#     port: 80
#     protocol: TCP
#     targetPort: http
#   - appProtocol: https
#     name: https
#     port: 443
#     protocol: TCP
#     targetPort: https
#   selector:
#     app.kubernetes.io/component: controller
#     app.kubernetes.io/instance: ingress-nginx
#     app.kubernetes.io/name: ingress-nginx
#   type: LoadBalancer              